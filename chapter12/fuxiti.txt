1. 自动变量和静态内部变量（在代码块内部声明的，带有static修饰符）

2. 静态存储时期变量，包括在代码块内部定义的带有static修饰符的，以及在所有函数
    之外定义的变量。

3. 具有静态存储时期和外部链接、文件作用域的变量，也就是在一个文件中所有函数之外
    定义的，不带static修饰的变量。

4. 空链接

5. 属于引用声明，表示此处用到的变量已经在其他地方声明过了。一种使用场景是在函数
    内部，一种是在其他文件的所有函数外部。

6. 使用calloc（）函数分配的变量，所有位都被置为0。

7. 文件1中的： int daisy：对文件1中所有函数可见，对文件2中的所有函数可见
               int lily：对文件1中的main（）函数可见
                extern int daisy, lily：daisy实际上是引用了上面的daisy，
                lily这里会出错
    文件2中的：extern int daisy：引用了文件1中的daisy，对本文件所有函数可见
               static int lily：对本文件所有函数可见
                int rose：对本文件所有函数可见
                int rose：对本函数可见

8. printf ... B ..R.. B.. G.. G，first（）里面定义了局部变量，因此对全局变量无影响，
    second（）中则直接修改了全局变量，因此后面打印了2个G
    
9. a.
    static int plink; 表明plink是一个静态内部变量，也就是拥有文件作用域，静态存储
    时期，内部链接的int类型变量。
    int valud_ct(const int arr[], int value, int n); 这是一个函数原型声明，函数
    接收3个参数，其中第一个是一个指针，指向一个不变的数组，后面2个是整数。
    
    b. 并不会，这2个参数是代码块作用域，空链接，自动存储时期的自动变量，它们相当
        于局部变量，对它们的修改不会对原来的值做出任何改变。
